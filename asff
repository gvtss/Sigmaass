local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or

function() return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local

function v15(v16, v17, ...) local v18 = 1;
local v19;
v16 = v4(v3(v16, 5), "..", function(v30) if(v1(v30, 2) == 79) then local v82 = 0;
    while true do
        if(v82 == 0) then v19 = v0(v3(v30, 1, 1));
    return ""; end end
    else local v83 = 0; local v84;
    while true do
        if(v83 == 0) then v84 = v2(v0(v30, 16));
    if v19 then local v99 = v5(v84, v19); v19 = nil;
    return v99;
    else return v84; end
    break; end end end end);
local

function v20(v31, v32, v33) if v33 then local v85 = (206 + 721) - (214 + 713);
local v86;
while true do
    if(v85 == (0 - 0)) then v86 = (v31 / ((1 + 1) ^ (v32 - (878 - (282 + 595))))) % ((5 - 3) ^ (((v33 - (1 - 0)) - (v32 - 1)) + (2 - 1)));
return v86 - (v86 % (1066 - (68 + 997)));
end end
else local v87 = 619 - (555 + 64);
local v88;
while true do
    if(v87 == (0 - 0)) then v88 = 2 ^ (v32 - (118 - (32 + 85)));
return (((v31 % (v88 + v88)) >= v88) and(932 - ((1814 - (892 + 65)) + (176 - 102)))) or(568 - ((677 - 310) + 201));
end end end end local

function v21() local v34 = v1(v16, v18, v18);
v18 = v18 + 1;
return v34;
end local

function v22() local v35 = 0 - 0;
local v36;
local v37;
while true do
    if(v35 == (350 - (87 + (1215 - (802 + 150))))) then v36, v37 = v1(v16, v18, v18 + (182 - (67 + 113)));
v18 = v18 + 2 + 0;
v35 = (5 - 3) - 1;
end
if(v35 == (1 + 0)) then
return (v37 * (1017 - 761)) + v36;
end end end local

function v23() local v38, v39, v40, v41 = v1(v16, v18, v18 + 3);
v18 = v18 + (6 - 2);
return (v41 * (12211951 + 4565265)) + (v40 * 65536) + (v39 * (1253 - (915 + 82))) + v38;
end local

function v24() local v42 = 0 - 0;
local v43;
local v44;
local v45;
local v46;
local v47;
local v48;
while true do
    if(v42 == (2 + 0)) then v47 = v20(v44, 27 - 6, 31);
v48 = ((v20(v44, 32) == 1) and - (1188 - (1069 + 118))) or(2 - 1);
v42 = (4 + 2) - 3;
end
if((1 + 0) == v42) then v45 = 1 - 0;
v46 = (v20(v44, 1, 20 + (0 - 0)) * (2 ^ 32)) + v43;
v42 = 793 - (368 + 423);
end
if(0 == v42) then v43 = v23();
v44 = v23();
v42 = 3 - 2;
end
if(v42 == (21 - (10 + 8))) then
if(v47 == ((0 - 0) - 0)) then
if(v46 == (442 - (416 + 26))) then
return v48 * (0 - 0);
else local v100 = (859 - (814 + 45)) + 0;
while true do
    if(v100 == (0 - (0 - 0))) then v47 = (24 + 415) - (145 + 293);
v45 = 430 - (44 + 386);
break;
end end end elseif(v47 == (3533 - (998 + 488))) then
return ((v46 == (0 + 0)) and(v48 * (1 / (0 + 0 + 0)))) or(v48 * NaN);
end
return v8(v48, v47 - (1795 - (201 + 571))) * (v45 + (v46 / ((1140 - (116 + 1022)) ^ (216 - 164))));
end end end local

function v25(v49) local v50;
if not v49 then v49 = v23();
if(v49 == (885 - (261 + 624))) then
return "";
end end v50 = v3(v16, v18, (v18 + v49) - (1 - 0));
v18 = v18 + v49;
local v51 = {};
for v65 = 1081 - (1020 + 60), #v50 do v51[v65] = v2(v1(v3(v50, v65, v65)));
    end
return v6(v51);
end local v26 = v23;
local

function v27(...) return {
    ...
}, v12("#", ...);
end local

function v28() local v52 = 396 - (115 + 281);
local v53;
local v54;
local v55;
local v56;
local v57;
local v58;
while true do local v67 = 0 - 0; while true do
    if((0 + 0) == v67) then
if(v52~ = 0) then
else local v97 = 0 - 0;
while true do
    if(v97~ = 0) then
else v53 = {};
v54 = {};
v97 = 3 - 2;
end
if(v97 == (869 - (550 + 317))) then v52 = 1;
break;
end
if(v97 == (1 - 0)) then v55 = {};
v56 = {
    v53,
    v54,
    nil,
    v55
};
v97 = 3 - 1;
end end end
if(v52 == 1) then v57 = v23();
v58 = {};
for v101 = 1, v57 do local v102 = 1990 - (582 + 1408);
    local v103;
local v104;
local v105;
while true do
    if((0 - 0) ~ = v102) then
else local v115 = 0 - 0;
local v116;
while true do
    if(v115~ = (0 - 0)) then
else v116 = 1824 - (1195 + 629);
while true do
    if(v116~ = (1 - 0)) then
else v102 = 1;
break;
end
if((241 - (187 + 54)) ~ = v116) then
else v103 = 780 - (162 + 618);
v104 = nil;
v116 = 1;
end end
break;
end end end
if(v102~ = (1 + 0)) then
else v105 = nil;
while true do
    if(v103 == (0 + 0)) then local v118 = 0;
local v119;
while true do
    if(v118 == (0 - 0)) then v119 = 0 - 0; while true do
    if(v119 == 1) then v103 = 1;
break;
end
if(v119~ = (0 + 0)) then
else v104 = v21();
v105 = nil;
v119 = 1637 - (1373 + 263);
end end
break;
end end end
if(v103~ = 1) then
else if(v104 == (1001 - (451 + 549))) then v105 = v21() ~ = 0;
elseif(v104 == (1 + 1)) then v105 = v24();
elseif(v104~ = 3) then
else v105 = v25();
end v58[v101] = v105;
break;
end end
break;
end end end v56[3] = v21();
v52 = 2;
end v67 = 1 - 0;
end
if(v67~ = 1) then
else if(2~ = v52) then
else
    for v106 = 1 - 0, v23() do local v107 = v21();
    if(v20(v107, 1, 1385 - (746 + 638)) ~ = 0) then
else local v110 = 0;
local v111;
local v112;
local v113;
local v114;
while true do
    if(v110~ = (0 + 0)) then
else v111 = 0 - 0;
v112 = nil;
v110 = 342 - (218 + 123);
end
if(v110 == (1583 - (1535 + 46))) then
while true do
    if(v111~ = 1) then
else local v121 = 0;
while true do
    if(0 == v121) then v114 = {
        v22(),
        v22(),
        nil,
        nil
    };
if(v112 == (0 + 0)) then local v341 = 0;
local v342;
while true do
    if((560 - (306 + 254)) == v341) then v342 = 0; while true do
    if((0 + 0) == v342) then v114[5 - 2] = v22();
v114[1471 - (899 + 568)] = v22();
break;
end end
break;
end end elseif(v112 == (1 + 0)) then v114[3] = v23();
elseif(v112 == (4 - 2)) then v114[606 - (268 + 335)] = v23() - (2 ^ (306 - (60 + 230)));
elseif(v112~ = 3) then
else local v3295 = 0;
local v3296;
while true do
    if(v3295 == (572 - (426 + 146))) then v3296 = 0;
while true do
    if(v3296 == (0 + 0)) then v114[1459 - (282 + 1174)] = v23() - (2 ^ (827 - (569 + 242)));
v114[4] = v22();
break;
end end
break;
end end end v121 = 2 - 1;
end
if(v121 == (1 + 0)) then v111 = 2;
break;
end end end
if(v111 == 2) then local v122 = 1024 - (706 + 318);
local v123;
while true do
    if((1251 - (721 + 530)) ~ = v122) then
else v123 = 0;
while true do
    if(v123 == (1271 - (945 + 326))) then
if(v20(v113, 1, 1) ~ = 1) then
else v114[4 - 2] = v58[v114[2 + 0]];
end
if(v20(v113, 2, 702 - (271 + 429)) ~ = 1) then
else v114[3 + 0] = v58[v114[1503 - (1408 + 92)]];
end v123 = 1087 - (461 + 625);
end
if((1289 - (993 + 295)) == v123) then v111 = 1 + 2;
break;
end end
break;
end end end
if(v111~ = (1174 - (418 + 753))) then
else if(v20(v113, 2 + 1, 1 + 2) == (1 + 0)) then v114[4] = v58[v114[4]];
end v53[v106] = v114;
break;
end
if(v111 == 0) then local v125 = 0 + 0;
local v126;
while true do
    if(v125 == (529 - (406 + 123))) then v126 = 1769 - (1749 + 20); while true do
    if(v126~ = 1) then
else v111 = 1;
break;
end
if(v126 == 0) then v112 = v20(v107, 2, 3);
v113 = v20(v107, 1 + 3, 6);
v126 = 1;
end end
break;
end end end end
break;
end
if((1323 - (1249 + 73)) == v110) then local v117 = 0 + 0;
while true do
    if(v117~ = 0) then
else v113 = nil;
v114 = nil;
v117 = 1;
end
if(v117 == 1) then v110 = 1147 - (466 + 679);
break;
end end end end end end
for v108 = 2 - 1, v23() do v54[v108 - (2 - 1)] = v28();
    end
return v56;
end
break;
end end end end local

function v29(v59, v60, v61) local v62 = v59[1];
local v63 = v59[2];
local v64 = v59[3];
return function(...) local v68 = v62;
local v69 = v63;
local v70 = v64;
local v71 = v27;
local v72 = 1;
local v73 = -1;
local v74 = {};
local v75 = {
    ...
};
local v76 = v12("#", ...) - 1;
local v77 = {};
local v78 = {};
for v89 = 0, v76 do
        if(v89 >= v70) then v74[v89 - v70] = v75[v89 + 1];
        else v78[v89] = v75[v89 + 1];
    end end local v79 = (v76 - v70) + 1;
local v80;
local v81;
while true do local v90 = 0; while true do
    if(v90 == 1) then
if(v81 <= 112) then
if(v81 <= 55) then
if(v81 <= 27) then
if(v81 <= 13) then
if(v81 <= 6) then
if(v81 <= 2) then
if(v81 <= 0) then local v129 = 0;
local v130;
local v131;
while true do
    if(v129 == 3) then v131 = v80[2];
v130 = v78[v80[3]];
v78[v131 + 1] = v130;
v129 = 4;
end
if(v129 == 7) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v129 = 8;
end
if(v129 == 4) then v78[v131] = v130[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v129 = 5;
end
if(v129 == 8) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v129 == 2) then v78[v131](v13(v78, v131 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v129 = 3;
end
if(v129 == 5) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v129 = 6;
end
if(v129 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v131 = v80[2];
v129 = 2;
end
if(v129 == 0) then v130 = nil;
v131 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v129 = 1;
end
if(v129 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v129 = 7;
end end elseif(v81 > 1) then v78[v80[2]] = v78[v80[3]] % v80[4];
else local v347;
local v348;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v348 = v80[2];
v78[v348](v13(v78, v348 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v348 = v80[2];
v347 = v78[v80[3]];
v78[v348 + 1] = v347;
v78[v348] = v347[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 4) then
if(v81 == 3) then local v359 = 0;
while true do
    if(v359 == 4) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v359 = 5;
end
if(v359 == 3) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v359 = 4;
end
if(0 == v359) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v359 = 1;
end
if(1 == v359) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v359 = 2;
end
if(v359 == 2) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v359 = 3;
end
if(v359 == 5) then v78[v80[2]] = v80[3];
break;
end end
else local v360;
local v361;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v361 = v80[2];
v78[v361](v13(v78, v361 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v361 = v80[2];
v360 = v78[v80[3]];
v78[v361 + 1] = v360;
v78[v361] = v360[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 > 5) then local v372;
local v373;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v373 = v80[2];
v78[v373](v13(v78, v373 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v373 = v80[2];
v372 = v78[v80[3]];
v78[v373 + 1] = v372;
v78[v373] = v372[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v385 = v80[2];
local v386 = v78[v385];
local v387 = v78[v385 + 2];
if(v387 > 0) then
if(v386 > v78[v385 + 1]) then v72 = v80[3];
else v78[v385 + 3] = v386;
end elseif(v386 < v78[v385 + 1]) then v72 = v80[3];
else v78[v385 + 3] = v386;
end end elseif(v81 <= 9) then
if(v81 <= 7) then local v132;
local v133;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v133 = v80[2];
v78[v133](v13(v78, v133 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v133 = v80[2];
v132 = v78[v80[3]];
v78[v133 + 1] = v132;
v78[v133] = v132[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 > 8) then local v388 = v80[2];
local v389, v390 = v71(v78[v388](v13(v78, v388 + 1, v80[3])));
v73 = (v390 + v388) - 1;
local v391 = 0;
for v1802 = v388, v73 do v391 = v391 + 1;
    v78[v1802] = v389[v391];
end
else local v392;
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v392 = v80[2];
v78[v392] = v78[v392](v13(v78, v392 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 11) then
if(v81 > 10) then local v401 = 0;
local v402;
local v403;
while true do
    if(v401 == 1) then v403 = v80[2];
v78[v403](v13(v78, v403 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v403 = v80[2];
v401 = 2;
end
if(v401 == 3) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v401 = 4;
end
if(v401 == 4) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v401 = 5;
end
if(0 == v401) then v402 = nil;
v403 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v401 = 1;
end
if(v401 == 2) then v402 = v78[v80[3]];
v78[v403 + 1] = v402;
v78[v403] = v402[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v401 = 3;
end
if(v401 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v401 = 6;
end
if(v401 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end end
else local v404 = 0;
local v405;
local v406;
while true do
    if(v404 == 2) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v404 = 3;
end
if(v404 == 3) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v404 = 4;
end
if(v404 == 0) then v405 = nil;
v406 = nil;
v406 = v80[2];
v78[v406](v13(v78, v406 + 1, v80[3]));
v72 = v72 + 1;
v404 = 1;
end
if(v404 == 4) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v404 = 5;
end
if(v404 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v404 = 6;
end
if(v404 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v404 == 1) then v80 = v68[v72];
v406 = v80[2];
v405 = v78[v80[3]];
v78[v406 + 1] = v405;
v78[v406] = v405[v80[4]];
v404 = 2;
end end end elseif(v81 == 12) then local v407;
local v408;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v408 = v80[2];
v78[v408](v13(v78, v408 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v408 = v80[2];
v407 = v78[v80[3]];
v78[v408 + 1] = v407;
v78[v408] = v407[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v419;
local v420;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v420 = v80[2];
v78[v420](v13(v78, v420 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v420 = v80[2];
v419 = v78[v80[3]];
v78[v420 + 1] = v419;
v78[v420] = v419[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 20) then
if(v81 <= 16) then
if(v81 <= 14) then local v145 = 0;
local v146;
local v147;
local v148;
while true do
    if(v145 == 4) then v147 = v78[v148];
v146 = v80[3];
for v2037 = 1, v146 do v147[v2037] = v78[v148 + v2037];
    end
break;
end
if(v145 == 2) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v145 = 3;
end
if(v145 == 0) then v146 = nil;
v147 = nil;
v148 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v145 = 1;
end
if(3 == v145) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v148 = v80[2];
v145 = 4;
end
if(v145 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v145 = 2;
end end elseif(v81 > 15) then local v431 = 0;
local v432;
local v433;
while true do
    if(v431 == 0) then v432 = nil;
v433 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v431 = 1;
end
if(v431 == 1) then v80 = v68[v72];
v433 = v80[2];
v78[v433](v13(v78, v433 + 1, v80[3]));
v72 = v72 + 1;
v431 = 2;
end
if(4 == v431) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v431 = 5;
end
if(v431 == 8) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v431 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v431 = 7;
end
if(v431 == 2) then v80 = v68[v72];
v433 = v80[2];
v432 = v78[v80[3]];
v78[v433 + 1] = v432;
v431 = 3;
end
if(v431 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v431 = 8;
end
if(v431 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v431 = 6;
end
if(v431 == 3) then v78[v433] = v432[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v431 = 4;
end end
else local v434;
local v435;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v435 = v80[2];
v78[v435] = v78[v435](v13(v78, v435 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v435 = v80[2];
v434 = v78[v80[3]];
v78[v435 + 1] = v434;
v78[v435] = v434[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 18) then
if(v81 == 17) then local v449;
local v450;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v450 = v80[2];
v78[v450](v13(v78, v450 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v450 = v80[2];
v449 = v78[v80[3]];
v78[v450 + 1] = v449;
v78[v450] = v449[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v461;
local v462;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v462 = v80[2];
v78[v462](v13(v78, v462 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v462 = v80[2];
v461 = v78[v80[3]];
v78[v462 + 1] = v461;
v78[v462] = v461[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 > 19) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
elseif not v78[v80[2]] then v72 = v72 + 1;
else v72 = v80[3];
end elseif(v81 <= 23) then
if(v81 <= 21) then local v149;
local v150;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v150 = v80[2];
v78[v150](v13(v78, v150 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v150 = v80[2];
v149 = v78[v80[3]];
v78[v150 + 1] = v149;
v78[v150] = v149[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 > 22) then local v476;
local v477;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v477 = v80[2];
v78[v477](v13(v78, v477 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v477 = v80[2];
v476 = v78[v80[3]];
v78[v477 + 1] = v476;
v78[v477] = v476[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v488 = 0;
while true do
    if(v488 == 0) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v488 = 1;
end
if(v488 == 6) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
break;
end
if(v488 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v488 = 2;
end
if(2 == v488) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v488 = 3;
end
if(v488 == 3) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v488 = 4;
end
if(v488 == 5) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v488 = 6;
end
if(v488 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v488 = 5;
end end end elseif(v81 <= 25) then
if(v81 == 24) then local v489;
local v490;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v490 = v80[2];
v78[v490] = v78[v490](v13(v78, v490 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v490 = v80[2];
v489 = v78[v80[3]];
v78[v490 + 1] = v489;
v78[v490] = v489[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v504 = v78[v80[4]];
if not v504 then v72 = v72 + 1;
else v78[v80[2]] = v504;
v72 = v80[3];
end end elseif(v81 == 26) then local v505;
local v506;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v506 = v80[2];
v78[v506](v13(v78, v506 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v506 = v80[2];
v505 = v78[v80[3]];
v78[v506 + 1] = v505;
v78[v506] = v505[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v517;
local v518;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v518 = v80[2];
v78[v518](v13(v78, v518 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v518 = v80[2];
v517 = v78[v80[3]];
v78[v518 + 1] = v517;
v78[v518] = v517[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 41) then
if(v81 <= 34) then
if(v81 <= 30) then
if(v81 <= 28) then local v162 = 0;
local v163;
local v164;
local v165;
while true do
    if(v162 == 1) then v165 = v80[3];
for v2043 = 1, v165 do v164[v2043] = v78[v163 + v2043];
    end
break;
end
if(v162 == 0) then v163 = v80[2];
v164 = v78[v163];
v162 = 1;
end end elseif(v81 == 29) then local v529;
local v530;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v530 = v80[2];
v78[v530](v13(v78, v530 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v530 = v80[2];
v529 = v78[v80[3]];
v78[v530 + 1] = v529;
v78[v530] = v529[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v541 = v80[2];
v78[v541](v78[v541 + 1]);
end elseif(v81 <= 32) then
if(v81 > 31) then local v542;
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v542 = v80[2];
v78[v542] = v78[v542](v13(v78, v542 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v551;
local v552;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v552 = v80[2];
v78[v552](v13(v78, v552 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v552 = v80[2];
v551 = v78[v80[3]];
v78[v552 + 1] = v551;
v78[v552] = v551[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 > 33) then local v563;
local v564;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v564 = v80[2];
v78[v564](v13(v78, v564 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v564 = v80[2];
v563 = v78[v80[3]];
v78[v564 + 1] = v563;
v78[v564] = v563[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v575;
local v576;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v576 = v80[2];
v78[v576](v13(v78, v576 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v576 = v80[2];
v575 = v78[v80[3]];
v78[v576 + 1] = v575;
v78[v576] = v575[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 37) then
if(v81 <= 35) then local v166 = 0;
local v167;
local v168;
while true do
    if(v166 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v166 = 7;
end
if(1 == v166) then v72 = v72 + 1;
v80 = v68[v72];
v168 = v80[2];
v166 = 2;
end
if(v166 == 3) then v168 = v80[2];
v167 = v78[v80[3]];
v78[v168 + 1] = v167;
v166 = 4;
end
if(v166 == 4) then v78[v168] = v167[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v166 = 5;
end
if(v166 == 5) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v166 = 6;
end
if(v166 == 2) then v78[v168](v13(v78, v168 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v166 = 3;
end
if(v166 == 0) then v167 = nil;
v168 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v166 = 1;
end
if(v166 == 7) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v166 = 8;
end
if(8 == v166) then v78[v80[2]][v80[3]] = v80[4];
break;
end end elseif(v81 == 36) then local v588;
local v589;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v589 = v80[2];
v78[v589](v13(v78, v589 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v589 = v80[2];
v588 = v78[v80[3]];
v78[v589 + 1] = v588;
v78[v589] = v588[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v589 = v80[2];
v78[v589] = v78[v589](v13(v78, v589 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v589 = v80[2];
v588 = v78[v80[3]];
v78[v589 + 1] = v588;
v78[v589] = v588[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] - v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] * v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
if v78[v80[2]] then v72 = v72 + 1;
else v72 = v80[3];
end end elseif(v81 <= 39) then
if(v81 == 38) then local v608;
local v609;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v609 = v80[2];
v78[v609](v13(v78, v609 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v609 = v80[2];
v608 = v78[v80[3]];
v78[v609 + 1] = v608;
v78[v609] = v608[v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v621;
local v622;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v622 = v80[2];
v78[v622](v13(v78, v622 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v622 = v80[2];
v621 = v78[v80[3]];
v78[v622 + 1] = v621;
v78[v622] = v621[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v622 = v80[2];
v78[v622] = v78[v622](v13(v78, v622 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v622 = v80[2];
v621 = v78[v80[3]];
v78[v622 + 1] = v621;
v78[v622] = v621[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 > 40) then local v634;
local v635;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v635 = v80[2];
v78[v635](v13(v78, v635 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v635 = v80[2];
v634 = v78[v80[3]];
v78[v635 + 1] = v634;
v78[v635] = v634[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v647 = v80[2];
local v648 = v78[v80[3]];
v78[v647 + 1] = v648;
v78[v647] = v648[v78[v80[4]]];
end elseif(v81 <= 48) then
if(v81 <= 44) then
if(v81 <= 42) then local v169;
local v170;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v170 = v80[2];
v78[v170](v13(v78, v170 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v170 = v80[2];
v169 = v78[v80[3]];
v78[v170 + 1] = v169;
v78[v170] = v169[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
elseif(v81 > 43) then local v652;
local v653;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = #v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v653 = v80[2];
v78[v653] = v78[v653](v13(v78, v653 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v653 = v80[2];
v652 = v78[v80[3]];
v78[v653 + 1] = v652;
v78[v653] = v652[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v653 = v80[2];
v78[v653](v13(v78, v653 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
do return;
end
else local v666;
local v667;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v667 = v80[2];
v78[v667] = v78[v667](v13(v78, v667 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v667 = v80[2];
v666 = v78[v80[3]];
v78[v667 + 1] = v666;
v78[v667] = v666[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 46) then
if(v81 > 45) then local v681 = v80[2];
local v682 = v78[v80[3]];
v78[v681 + 1] = v682;
v78[v681] = v682[v80[4]];
else local v686;
local v687;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v687 = v80[2];
v78[v687](v13(v78, v687 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v687 = v80[2];
v686 = v78[v80[3]];
v78[v687 + 1] = v686;
v78[v687] = v686[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 > 47) then local v701 = 0;
while true do
    if(v701 == 2) then v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v701 = 3;
end
if(v701 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v701 = 2;
end
if(v701 == 3) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v701 == 0) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v701 = 1;
end end
else local v702;
v61[v80[3]] = v78[v80[2]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v702 = v80[2];
v78[v702] = v78[v702](v13(v78, v702 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
end elseif(v81 <= 51) then
if(v81 <= 49) then local v182;
local v183;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v183 = v80[2];
v78[v183](v13(v78, v183 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v183 = v80[2];
v182 = v78[v80[3]];
v78[v183 + 1] = v182;
v78[v183] = v182[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 == 50) then local v712 = v80[2];
do return v78[v712](v13(v78, v712 + 1, v80[3]));
end
else local v713 = 0;
local v714;
local v715;
while true do
    if(v713 == 0) then v714 = nil;
v715 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v713 = 1;
end
if(v713 == 2) then v80 = v68[v72];
v715 = v80[2];
v714 = v78[v80[3]];
v78[v715 + 1] = v714;
v713 = 3;
end
if(v713 == 1) then v80 = v68[v72];
v715 = v80[2];
v78[v715](v13(v78, v715 + 1, v80[3]));
v72 = v72 + 1;
v713 = 2;
end
if(v713 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v713 = 6;
end
if(v713 == 3) then v78[v715] = v714[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v713 = 4;
end
if(v713 == 6) then v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v713 = 7;
end
if(v713 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v713 = 5;
end
if(v713 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v713 = 8;
end
if(8 == v713) then v80 = v68[v72];
v78[v80[2]] = v80[3];
break;
end end end elseif(v81 <= 53) then
if(v81 == 52) then local v716;
local v717;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v717 = v80[2];
v78[v717](v13(v78, v717 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v717 = v80[2];
v716 = v78[v80[3]];
v78[v717 + 1] = v716;
v78[v717] = v716[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v717 = v80[2];
v78[v717] = v78[v717](v13(v78, v717 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v717 = v80[2];
v716 = v78[v80[3]];
v78[v717 + 1] = v716;
v78[v717] = v716[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v729;
local v730;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v730 = v80[2];
v78[v730](v13(v78, v730 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v730 = v80[2];
v729 = v78[v80[3]];
v78[v730 + 1] = v729;
v78[v730] = v729[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 > 54) then local v742 = 0;
while true do
    if(v742 == 2) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v742 = 3;
end
if(v742 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v742 = 2;
end
if(v742 == 3) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v742 == 0) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v742 = 1;
end end
else local v743;
local v744;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v744 = v80[2];
v78[v744](v13(v78, v744 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v744 = v80[2];
v743 = v78[v80[3]];
v78[v744 + 1] = v743;
v78[v744] = v743[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 83) then
if(v81 <= 69) then
if(v81 <= 62) then
if(v81 <= 58) then
if(v81 <= 56) then local v195;
local v196;
local v197;
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v197 = v80[2];
v196 = v78[v197];
v195 = v80[3];
for v343 = 1, v195 do v196[v343] = v78[v197 + v343];
    end elseif(v81 > 57) then v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
else local v758;
local v759;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v759 = v80[2];
v78[v759](v13(v78, v759 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v759 = v80[2];
v758 = v78[v80[3]];
v78[v759 + 1] = v758;
v78[v759] = v758[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 60) then
if(v81 > 59) then v78[v80[2]]();
else v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 == 61) then local v772;
local v773;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v773 = v80[2];
v78[v773](v13(v78, v773 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v773 = v80[2];
v772 = v78[v80[3]];
v78[v773 + 1] = v772;
v78[v773] = v772[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v784;
local v785;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v785 = v80[2];
v78[v785](v13(v78, v785 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v785 = v80[2];
v784 = v78[v80[3]];
v78[v785 + 1] = v784;
v78[v785] = v784[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 65) then
if(v81 <= 63) then v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
elseif(v81 > 64) then local v796;
local v797;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v797 = v80[2];
v78[v797](v13(v78, v797 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v797 = v80[2];
v796 = v78[v80[3]];
v78[v797 + 1] = v796;
v78[v797] = v796[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v809 = 0;
local v810;
while true do
    if(v809 == 0) then v810 = v80[2];
do return v13(v78, v810, v73);
end
break;
end end end elseif(v81 <= 67) then
if(v81 == 66) then local v811;
local v812;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v812 = v80[2];
v78[v812](v13(v78, v812 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v812 = v80[2];
v811 = v78[v80[3]];
v78[v812 + 1] = v811;
v78[v812] = v811[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v826 = 0;
local v827;
local v828;
while true do
    if(4 == v826) then v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v826 = 5;
end
if(v826 == 0) then v827 = nil;
v828 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v828 = v80[2];
v826 = 1;
end
if(v826 == 5) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v826 == 3) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v826 = 4;
end
if(v826 == 1) then v78[v828](v13(v78, v828 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v828 = v80[2];
v827 = v78[v80[3]];
v78[v828 + 1] = v827;
v826 = 2;
end
if(v826 == 2) then v78[v828] = v827[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v826 = 3;
end end end elseif(v81 > 68) then v78[v80[2]] = v78[v80[3]][v80[4]];
else local v831;
local v832;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v832 = v80[2];
v78[v832](v13(v78, v832 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v832 = v80[2];
v831 = v78[v80[3]];
v78[v832 + 1] = v831;
v78[v832] = v831[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 76) then
if(v81 <= 72) then
if(v81 <= 70) then local v204;
local v205;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v205 = v80[2];
v78[v205](v13(v78, v205 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v205 = v80[2];
v204 = v78[v80[3]];
v78[v205 + 1] = v204;
v78[v205] = v204[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
elseif(v81 == 71) then local v843 = 0;
local v844;
local v845;
while true do
    if(2 == v843) then v78[v845](v13(v78, v845 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v843 = 3;
end
if(v843 == 4) then v78[v845] = v844[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v843 = 5;
end
if(v843 == 8) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v843 == 0) then v844 = nil;
v845 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v843 = 1;
end
if(v843 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v845 = v80[2];
v843 = 2;
end
if(3 == v843) then v845 = v80[2];
v844 = v78[v80[3]];
v78[v845 + 1] = v844;
v843 = 4;
end
if(5 == v843) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v843 = 6;
end
if(6 == v843) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v843 = 7;
end
if(v843 == 7) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v843 = 8;
end end
else v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 74) then
if(v81 == 73) then local v851;
local v852;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v852 = v80[2];
v78[v852](v13(v78, v852 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v852 = v80[2];
v851 = v78[v80[3]];
v78[v852 + 1] = v851;
v78[v852] = v851[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else v78[v80[2]] = v78[v80[3]];
end elseif(v81 > 75) then local v866 = v80[2];
v78[v866] = v78[v866](v13(v78, v866 + 1, v73));
else local v868 = v69[v80[3]];
local v869;
local v870 = {};
v869 = v10({}, {
    __index = function(v1842, v1843) local v1844 = v870[v1843];
    return v1844[1][v1844[2]];end,
    __newindex = function(v1845, v1846, v1847) local v1848 = 0;local v1849;
    while true do
        if(v1848 == 0) then v1849 = v870[v1846];
    v1849[1][v1849[2]] = v1847;
    break;end end end
});
for v1850 = 1, v80[4] do v72 = v72 + 1;
    local v1851 = v68[v72];
if(v1851[1] == 74) then v870[v1850 - 1] = {
    v78,
    v1851[3]
};
else v870[v1850 - 1] = {
    v60,
    v1851[3]
};
end v77[#v77 + 1] = v870;
end v78[v80[2]] = v29(v868, v869, v61);
end elseif(v81 <= 79) then
if(v81 <= 77) then local v216 = 0;
local v217;
local v218;
while true do
    if(v216 == 4) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v216 = 5;
end
if(v216 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v216 = 6;
end
if(v216 == 1) then v218 = v80[2];
v78[v218](v13(v78, v218 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v218 = v80[2];
v216 = 2;
end
if(v216 == 0) then v217 = nil;
v218 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v216 = 1;
end
if(v216 == 2) then v217 = v78[v80[3]];
v78[v218 + 1] = v217;
v78[v218] = v217[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v216 = 3;
end
if(v216 == 6) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(3 == v216) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v216 = 4;
end end elseif(v81 > 78) then local v872 = 0;
local v873;
local v874;
local v875;
local v876;
while true do
    if(v872 == 2) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v872 = 3;
end
if(v872 == 0) then v873 = nil;
v874, v875 = nil;
v876 = nil;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v872 = 1;
end
if(v872 == 9) then do return v13(v78, v876, v73);
    end v72 = v72 + 1;
v80 = v68[v72];
do return;
end
break;
end
if(v872 == 3) then v876 = v80[2];
v874, v875 = v71(v78[v876](v78[v876 + 1]));
v73 = (v875 + v876) - 1;
v873 = 0;
for v3266 = v876, v73 do v873 = v873 + 1;
    v78[v3266] = v874[v873];
end v72 = v72 + 1;
v80 = v68[v72];
v876 = v80[2];
v872 = 4;
end
if(v872 == 8) then v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v876 = v80[2];
do return v78[v876](v13(v78, v876 + 1, v80[3]));
end v72 = v72 + 1;
v80 = v68[v72];
v876 = v80[2];
v872 = 9;
end
if(v872 == 5) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v872 = 6;
end
if(v872 == 6) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v876 = v80[2];
v874, v875 = v71(v78[v876](v78[v876 + 1]));
v73 = (v875 + v876) - 1;
v872 = 7;
end
if(v872 == 7) then v873 = 0;
for v3269 = v876, v73 do local v3270 = 0; while true do
        if(v3270 == 0) then v873 = v873 + 1;v78[v3269] = v874[v873];
    break;end end end v72 = v72 + 1;v80 = v68[v72];v876 = v80[2];v78[v876] = v78[v876](v13(v78, v876 + 1, v73));v72 = v72 + 1;v80 = v68[v72];v872 = 8;end
    if(v872 == 1) then v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v872 = 2;
end
if(v872 == 4) then v78[v876] = v78[v876](v13(v78, v876 + 1, v73));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v872 = 5;
end end
else local v877;
local v878;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v878 = v80[2];
v78[v878](v13(v78, v878 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v878 = v80[2];
v877 = v78[v80[3]];
v78[v878 + 1] = v877;
v78[v878] = v877[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 81) then
if(v81 == 80) then local v890 = 0;
local v891;
while true do
    if(v890 == 0) then v891 = v80[2];
v78[v891](v13(v78, v891 + 1, v80[3]));
break;
end end
else local v892;
local v893;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v893 = v80[2];
v78[v893](v13(v78, v893 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v893 = v80[2];
v892 = v78[v80[3]];
v78[v893 + 1] = v892;
v78[v893] = v892[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v893 = v80[2];
v78[v893] = v78[v893](v13(v78, v893 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v893 = v80[2];
v892 = v78[v80[3]];
v78[v893 + 1] = v892;
v78[v893] = v892[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 > 82) then v78[v80[2]] = v29(v69[v80[3]], nil, v61);
else local v907;
local v908;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v908 = v80[2];
v78[v908](v13(v78, v908 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v908 = v80[2];
v907 = v78[v80[3]];
v78[v908 + 1] = v907;
v78[v908] = v907[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 97) then
if(v81 <= 90) then
if(v81 <= 86) then
if(v81 <= 84) then local v219;
local v220;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v220 = v80[2];
v78[v220](v13(v78, v220 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v220 = v80[2];
v219 = v78[v80[3]];
v78[v220 + 1] = v219;
v78[v220] = v219[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 == 85) then local v920;
local v921;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v921 = v80[2];
v78[v921](v13(v78, v921 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v921 = v80[2];
v920 = v78[v80[3]];
v78[v921 + 1] = v920;
v78[v921] = v920[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v932;
local v933;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v933 = v80[2];
v78[v933](v13(v78, v933 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v933 = v80[2];
v932 = v78[v80[3]];
v78[v933 + 1] = v932;
v78[v933] = v932[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 88) then
if(v81 == 87) then local v944;
local v945;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v945 = v80[2];
v78[v945](v13(v78, v945 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v945 = v80[2];
v944 = v78[v80[3]];
v78[v945 + 1] = v944;
v78[v945] = v944[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else v78[v80[2]] = v61[v80[3]];
end elseif(v81 > 89) then local v959 = 0;
local v960;
local v961;
while true do
    if(0 == v959) then v960 = nil;
v961 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v959 = 1;
end
if(v959 == 6) then v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v959 = 7;
end
if(1 == v959) then v80 = v68[v72];
v961 = v80[2];
v78[v961](v13(v78, v961 + 1, v80[3]));
v72 = v72 + 1;
v959 = 2;
end
if(v959 == 3) then v78[v961] = v960[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v959 = 4;
end
if(v959 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v959 = 5;
end
if(5 == v959) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v959 = 6;
end
if(v959 == 2) then v80 = v68[v72];
v961 = v80[2];
v960 = v78[v80[3]];
v78[v961 + 1] = v960;
v959 = 3;
end
if(v959 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end end
else local v962;
local v963;
v963 = v80[2];
v78[v963] = v78[v963](v13(v78, v963 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v963 = v80[2];
v962 = v78[v80[3]];
v78[v963 + 1] = v962;
v78[v963] = v962[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v963 = v80[2];
v78[v963] = v78[v963](v13(v78, v963 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v963 = v80[2];
v962 = v78[v80[3]];
v78[v963 + 1] = v962;
v78[v963] = v962[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 93) then
if(v81 <= 91) then local v231 = 0;
local v232;
local v233;
while true do
    if(v231 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v231 = 5;
end
if(v231 == 1) then v80 = v68[v72];
v233 = v80[2];
v78[v233](v13(v78, v233 + 1, v80[3]));
v72 = v72 + 1;
v231 = 2;
end
if(v231 == 0) then v232 = nil;
v233 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v231 = 1;
end
if(v231 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v231 = 8;
end
if(v231 == 6) then v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v231 = 7;
end
if(5 == v231) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v231 = 6;
end
if(v231 == 8) then v80 = v68[v72];
v78[v80[2]] = v80[3];
break;
end
if(v231 == 3) then v78[v233] = v232[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v231 = 4;
end
if(2 == v231) then v80 = v68[v72];
v233 = v80[2];
v232 = v78[v80[3]];
v78[v233 + 1] = v232;
v231 = 3;
end end elseif(v81 == 92) then local v975;
local v976;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v976 = v80[2];
v78[v976](v13(v78, v976 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v976 = v80[2];
v975 = v78[v80[3]];
v78[v976 + 1] = v975;
v78[v976] = v975[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v987;
local v988;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v988 = v80[2];
v78[v988](v13(v78, v988 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v988 = v80[2];
v987 = v78[v80[3]];
v78[v988 + 1] = v987;
v78[v988] = v987[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 95) then
if(v81 > 94) then local v999 = 0;
local v1000;
local v1001;
while true do
    if(v999 == 8) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
break;
end
if(v999 == 1) then v80 = v68[v72];
v1001 = v80[2];
v78[v1001](v13(v78, v1001 + 1, v80[3]));
v72 = v72 + 1;
v999 = 2;
end
if(v999 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v999 = 5;
end
if(v999 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v999 = 8;
end
if(v999 == 6) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v999 = 7;
end
if(v999 == 2) then v80 = v68[v72];
v1001 = v80[2];
v1000 = v78[v80[3]];
v78[v1001 + 1] = v1000;
v999 = 3;
end
if(v999 == 3) then v78[v1001] = v1000[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v999 = 4;
end
if(v999 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v999 = 6;
end
if(v999 == 0) then v1000 = nil;
v1001 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v999 = 1;
end end
else
    for v1902 = v80[2], v80[3] do v78[v1902] = nil;
    end end elseif(v81 > 96) then v78[v80[2]] = v78[v80[3]] - v80[4];
else v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 104) then
if(v81 <= 100) then
if(v81 <= 98) then local v234;
local v235;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v235 = v80[2];
v78[v235](v13(v78, v235 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v235 = v80[2];
v234 = v78[v80[3]];
v78[v235 + 1] = v234;
v78[v235] = v234[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 > 99) then local v1008 = 0;
local v1009;
local v1010;
while true do
    if(v1008 == 6) then v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v1008 = 7;
end
if(v1008 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1008 = 6;
end
if(v1008 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(2 == v1008) then v80 = v68[v72];
v1010 = v80[2];
v1009 = v78[v80[3]];
v78[v1010 + 1] = v1009;
v1008 = 3;
end
if(3 == v1008) then v78[v1010] = v1009[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v1008 = 4;
end
if(v1008 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1008 = 5;
end
if(v1008 == 0) then v1009 = nil;
v1010 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1008 = 1;
end
if(v1008 == 1) then v80 = v68[v72];
v1010 = v80[2];
v78[v1010](v13(v78, v1010 + 1, v80[3]));
v72 = v72 + 1;
v1008 = 2;
end end
else local v1011;
local v1012;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1012 = v80[2];
v78[v1012](v13(v78, v1012 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1012 = v80[2];
v1011 = v78[v80[3]];
v78[v1012 + 1] = v1011;
v78[v1012] = v1011[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 102) then
if(v81 == 101) then local v1023;
local v1024;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1024 = v80[2];
v78[v1024](v13(v78, v1024 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1024 = v80[2];
v1023 = v78[v80[3]];
v78[v1024 + 1] = v1023;
v78[v1024] = v1023[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v78[v80[2]] == v80[4]) then v72 = v72 + 1;
else v72 = v80[3];
end elseif(v81 == 103) then local v1035 = 0;
while true do
    if(v1035 == 0) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v1035 = 1;
end
if(v1035 == 3) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1035 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1035 = 2;
end
if(v1035 == 2) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1035 = 3;
end end
else local v1036;
local v1037;
local v1038, v1039;
local v1040;
local v1041;
v1041 = v80[2];
v78[v1041] = v78[v1041](v13(v78, v1041 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v1040 = v78[v80[3]];
v78[v1041 + 1] = v1040;
v78[v1041] = v1040[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v78[v1041] = v78[v1041](v13(v78, v1041 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v1040 = v78[v80[3]];
v78[v1041 + 1] = v1040;
v78[v1041] = v1040[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v78[v1041] = v78[v1041](v13(v78, v1041 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v1040 = v78[v80[3]];
v78[v1041 + 1] = v1040;
v78[v1041] = v1040[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v78[v1041] = v78[v1041](v13(v78, v1041 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v78[v1041] = v78[v1041](v13(v78, v1041 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v78[v1041] = v78[v1041](v13(v78, v1041 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1041 = v80[2];
v1038, v1039 = v71(v78[v1041](v13(v78, v1041 + 1, v80[3])));
v73 = (v1039 + v1041) - 1;
v1037 = 0;
for v1904 = v1041, v73 do local v1905 = 0; while true do
        if(v1905 == 0) then v1037 = v1037 + 1;v78[v1904] = v1038[v1037];
    break;end end end v72 = v72 + 1;v80 = v68[v72];v1041 = v80[2];v1036 = v78[v1041];
    for v1906 = v1041 + 1, v73 do v7(v1036, v78[v1906]);end end elseif(v81 <= 108) then
    if(v81 <= 106) then
if(v81 > 105) then local v1056 = v80[2];
local v1057 = v78[v1056];
for v1907 = v1056 + 1, v80[3] do v7(v1057, v78[v1907]);
    end
else local v1058 = 0;
local v1059;
while true do
    if(0 == v1058) then v1059 = nil;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v1058 = 1;
end
if(v1058 == 1) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v1058 = 2;
end
if(2 == v1058) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v1058 = 3;
end
if(v1058 == 4) then v80 = v68[v72];
v1059 = v80[2];
v78[v1059] = v78[v1059](v13(v78, v1059 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v1058 = 5;
end
if(v1058 == 5) then v72 = v72 + 1;
v80 = v68[v72];
do return;
end
break;
end
if(v1058 == 3) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v80[4];
v72 = v72 + 1;
v1058 = 4;
end end end elseif(v81 == 107) then
if(v78[v80[2]] < v78[v80[4]]) then v72 = v72 + 1;
else v72 = v80[3];
end
else local v1060;
local v1061;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1061 = v80[2];
v78[v1061] = v78[v1061](v13(v78, v1061 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1061 = v80[2];
v1060 = v78[v80[3]];
v78[v1061 + 1] = v1060;
v78[v1061] = v1060[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 110) then
if(v81 > 109) then local v1075 = v80[2];
do return v13(v78, v1075, v1075 + v80[3]);
end
else local v1076;
local v1077;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1077 = v80[2];
v78[v1077] = v78[v1077](v13(v78, v1077 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1077 = v80[2];
v1076 = v78[v80[3]];
v78[v1077 + 1] = v1076;
v78[v1077] = v1076[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 == 111) then local v1091 = 0;
local v1092;
local v1093;
while true do
    if(v1091 == 0) then v1092 = v80[2];
v1093 = {};
v1091 = 1;
end
if(v1091 == 1) then
for v3273 = 1, #v77 do local v3274 = 0;
    local v3275;
while true do
    if(v3274 == 0) then v3275 = v77[v3273];
for v3307 = 0, #v3275 do local v3308 = v3275[v3307];
    local v3309 = v3308[1];
local v3310 = v3308[2];
if((v3309 == v78) and(v3310 >= v1092)) then v1093[v3310] = v3309[v3310];
v3308[1] = v1093;
end end
break;
end end end
break;
end end
else local v1094;
local v1095;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1095 = v80[2];
v78[v1095](v13(v78, v1095 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1095 = v80[2];
v1094 = v78[v80[3]];
v78[v1095 + 1] = v1094;
v78[v1095] = v1094[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 168) then
if(v81 <= 140) then
if(v81 <= 126) then
if(v81 <= 119) then
if(v81 <= 115) then
if(v81 <= 113) then local v247 = 0;
local v248;
local v249;
while true do
    if(v247 == 0) then v248 = nil;
v249 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v247 = 1;
end
if(5 == v247) then v78[v249] = v78[v249](v13(v78, v249 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v249 = v80[2];
v248 = v78[v80[3]];
v247 = 6;
end
if(2 == v247) then v72 = v72 + 1;
v80 = v68[v72];
v249 = v80[2];
v248 = v78[v80[3]];
v78[v249 + 1] = v248;
v247 = 3;
end
if(v247 == 3) then v78[v249] = v248[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v247 = 4;
end
if(v247 == 6) then v78[v249 + 1] = v248;
v78[v249] = v248[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v247 = 7;
end
if(v247 == 4) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v249 = v80[2];
v247 = 5;
end
if(v247 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
break;
end
if(v247 == 1) then v249 = v80[2];
v78[v249](v13(v78, v249 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v247 = 2;
end end elseif(v81 == 114) then local v1106 = 0;
local v1107;
local v1108;
while true do
    if(v1106 == 3) then v78[v1108] = v1107[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v1106 = 4;
end
if(v1106 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v1106 = 5;
end
if(v1106 == 6) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1106 == 1) then v80 = v68[v72];
v1108 = v80[2];
v78[v1108](v13(v78, v1108 + 1, v80[3]));
v72 = v72 + 1;
v1106 = 2;
end
if(v1106 == 0) then v1107 = nil;
v1108 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1106 = 1;
end
if(v1106 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1106 = 6;
end
if(v1106 == 2) then v80 = v68[v72];
v1108 = v80[2];
v1107 = v78[v80[3]];
v78[v1108 + 1] = v1107;
v1106 = 3;
end end
else local v1109 = 0;
while true do
    if(v1109 == 2) then v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1109 = 3;
end
if(3 == v1109) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v80[4];
v1109 = 4;
end
if(v1109 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v1109 = 2;
end
if(v1109 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v1109 = 5;
end
if(v1109 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1109 = 6;
end
if(v1109 == 6) then v72 = v80[3];
break;
end
if(v1109 == 0) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v1109 = 1;
end end end elseif(v81 <= 117) then
if(v81 > 116) then local v1110;
local v1111;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1111 = v80[2];
v78[v1111] = v78[v1111](v13(v78, v1111 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1111 = v80[2];
v1110 = v78[v80[3]];
v78[v1111 + 1] = v1110;
v78[v1111] = v1110[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v1125 = 0;
local v1126;
local v1127;
local v1128;
local v1129;
while true do
    if(0 == v1125) then v1126 = nil;
v1127, v1128 = nil;
v1129 = nil;
v1129 = v80[2];
v78[v1129] = v78[v1129]();
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1125 = 1;
end
if(6 == v1125) then v78[v1129] = v78[v1129](v13(v78, v1129 + 1, v73));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1125 = 7;
end
if(v1125 == 2) then v78[v80[2]] = v78[v80[3]] % v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1125 = 3;
end
if(v1125 == 7) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v72 = v80[3];
break;
end
if(v1125 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1125 = 5;
end
if(v1125 == 3) then v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1125 = 4;
end
if(v1125 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1125 = 2;
end
if(v1125 == 5) then v1129 = v80[2];
v1127, v1128 = v71(v78[v1129](v78[v1129 + 1]));
v73 = (v1128 + v1129) - 1;
v1126 = 0;
for v3276 = v1129, v73 do v1126 = v1126 + 1;
    v78[v3276] = v1127[v1126];
end v72 = v72 + 1;
v80 = v68[v72];
v1129 = v80[2];
v1125 = 6;
end end end elseif(v81 == 118) then local v1130;
local v1131;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1131 = v80[2];
v78[v1131](v13(v78, v1131 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1131 = v80[2];
v1130 = v78[v80[3]];
v78[v1131 + 1] = v1130;
v78[v1131] = v1130[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1142 = 0;
local v1143;
while true do
    if(v1142 == 2) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1142 = 3;
end
if(v1142 == 0) then v1143 = nil;
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1142 = 1;
end
if(v1142 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
break;
end
if(v1142 == 3) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1142 = 4;
end
if(v1142 == 4) then v80 = v68[v72];
v1143 = v80[2];
v78[v1143] = v78[v1143](v13(v78, v1143 + 1, v80[3]));
v1142 = 5;
end
if(v1142 == 1) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1142 = 2;
end end end elseif(v81 <= 122) then
if(v81 <= 120) then local v250 = 0;
local v251;
local v252;
while true do
    if(3 == v250) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v250 = 4;
end
if(v250 == 0) then v251 = nil;
v252 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v250 = 1;
end
if(v250 == 1) then v252 = v80[2];
v78[v252](v13(v78, v252 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v252 = v80[2];
v250 = 2;
end
if(6 == v250) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(5 == v250) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v250 = 6;
end
if(v250 == 2) then v251 = v78[v80[3]];
v78[v252 + 1] = v251;
v78[v252] = v251[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v250 = 3;
end
if(v250 == 4) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v250 = 5;
end end elseif(v81 > 121) then local v1144 = 0;
local v1145;
local v1146;
while true do
    if(v1144 == 0) then v1145 = nil;
v1146 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1144 = 1;
end
if(v1144 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1144 = 6;
end
if(v1144 == 1) then v1146 = v80[2];
v78[v1146](v13(v78, v1146 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1146 = v80[2];
v1144 = 2;
end
if(v1144 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1144 == 2) then v1145 = v78[v80[3]];
v78[v1146 + 1] = v1145;
v78[v1146] = v1145[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1144 = 3;
end
if(v1144 == 3) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v1144 = 4;
end
if(4 == v1144) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v1144 = 5;
end end
else local v1147 = 0;
local v1148;
local v1149;
local v1150;
local v1151;
local v1152;
while true do
    if(v1147 == 23) then v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v1147 = 24;
end
if(v1147 == 12) then v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1147 = 13;
end
if(v1147 == 0) then v1148 = nil;
v1149, v1150 = nil;
v1151 = nil;
v1152 = nil;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v1147 = 1;
end
if(v1147 == 1) then v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1147 = 2;
end
if(v1147 == 14) then v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1147 = 15;
end
if(v1147 == 18) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v1147 = 19;
end
if(24 == v1147) then v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1147 = 25;
end
if(10 == v1147) then v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v1147 = 11;
end
if(v1147 == 3) then v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v73));
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152]();
v72 = v72 + 1;
v1147 = 4;
end
if(v1147 == 26) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v1147 = 27;
end
if(v1147 == 16) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v1147 = 17;
end
if(v1147 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1147 = 8;
end
if(v1147 == 20) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1147 = 21;
end
if(v1147 == 2) then v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1149, v1150 = v71(v78[v1152](v13(v78, v1152 + 1, v80[3])));
v73 = (v1150 + v1152) - 1;
v1148 = 0;
for v3279 = v1152, v73 do local v3280 = 0; while true do
        if(v3280 == 0) then v1148 = v1148 + 1;v78[v3279] = v1149[v1148];
    break;end end end v1147 = 3;end
    if(v1147 == 15) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1147 = 16;
end
if(v1147 == 9) then v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1147 = 10;
end
if(v1147 == 5) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v1147 = 6;
end
if(v1147 == 6) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v1147 = 7;
end
if(v1147 == 27) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1147 == 21) then v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v1147 = 22;
end
if(v1147 == 8) then v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v1147 = 9;
end
if(v1147 == 22) then v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1147 = 23;
end
if(v1147 == 19) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v1147 = 20;
end
if(v1147 == 17) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v1147 = 18;
end
if(v1147 == 11) then v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1147 = 12;
end
if(13 == v1147) then v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v1147 = 14;
end
if(v1147 == 25) then v80 = v68[v72];
v1152 = v80[2];
v78[v1152] = v78[v1152](v13(v78, v1152 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v1147 = 26;
end
if(v1147 == 4) then v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v1152 = v80[2];
v1151 = v78[v80[3]];
v78[v1152 + 1] = v1151;
v78[v1152] = v1151[v80[4]];
v72 = v72 + 1;
v1147 = 5;
end end end elseif(v81 <= 124) then
if(v81 > 123) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1158 = 0;
local v1159;
while true do
    if(v1158 == 0) then v1159 = v80[2];
v78[v1159] = v78[v1159]();
break;
end end end elseif(v81 == 125) then local v1160;
local v1161;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1161 = v80[2];
v78[v1161](v13(v78, v1161 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1161 = v80[2];
v1160 = v78[v80[3]];
v78[v1161 + 1] = v1160;
v78[v1161] = v1160[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1172;
local v1173;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1173 = v80[2];
v78[v1173](v13(v78, v1173 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1173 = v80[2];
v1172 = v78[v80[3]];
v78[v1173 + 1] = v1172;
v78[v1173] = v1172[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1173 = v80[2];
v78[v1173] = v78[v1173](v13(v78, v1173 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1173 = v80[2];
v1172 = v78[v80[3]];
v78[v1173 + 1] = v1172;
v78[v1173] = v1172[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 133) then
if(v81 <= 129) then
if(v81 <= 127) then local v253 = 0;
local v254;
while true do
    if(v253 == 2) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v253 = 3;
end
if(v253 == 0) then v254 = nil;
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v253 = 1;
end
if(1 == v253) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v253 = 2;
end
if(v253 == 3) then v80 = v68[v72];
v254 = v80[2];
v78[v254] = v78[v254](v13(v78, v254 + 1, v80[3]));
v72 = v72 + 1;
v253 = 4;
end
if(v253 == 4) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
break;
end end elseif(v81 == 128) then local v1185;
local v1186;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1186 = v80[2];
v78[v1186](v13(v78, v1186 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1186 = v80[2];
v1185 = v78[v80[3]];
v78[v1186 + 1] = v1185;
v78[v1186] = v1185[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else v78[v80[2]] = v78[v80[3]] + v80[4];
end elseif(v81 <= 131) then
if(v81 > 130) then local v1198;
local v1199;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1199 = v80[2];
v78[v1199](v13(v78, v1199 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1199 = v80[2];
v1198 = v78[v80[3]];
v78[v1199 + 1] = v1198;
v78[v1199] = v1198[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1211 = 0;
local v1212;
local v1213;
while true do
    if(v1211 == 6) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v1211 = 7;
end
if(v1211 == 3) then v1213 = v80[2];
v1212 = v78[v80[3]];
v78[v1213 + 1] = v1212;
v78[v1213] = v1212[v78[v80[4]]];
v1211 = 4;
end
if(v1211 == 0) then v1212 = nil;
v1213 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1211 = 1;
end
if(v1211 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1211 = 8;
end
if(v1211 == 2) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1211 = 3;
end
if(v1211 == 8) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1211 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v1211 = 5;
end
if(v1211 == 5) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1211 = 6;
end
if(v1211 == 1) then v80 = v68[v72];
v1213 = v80[2];
v78[v1213](v13(v78, v1213 + 1, v80[3]));
v72 = v72 + 1;
v1211 = 2;
end end end elseif(v81 == 132) then local v1214;
local v1215;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1215 = v80[2];
v78[v1215](v13(v78, v1215 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1215 = v80[2];
v1214 = v78[v80[3]];
v78[v1215 + 1] = v1214;
v78[v1215] = v1214[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v1227;
local v1228;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1228 = v80[2];
v78[v1228](v13(v78, v1228 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1228 = v80[2];
v1227 = v78[v80[3]];
v78[v1228 + 1] = v1227;
v78[v1228] = v1227[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 136) then
if(v81 <= 134) then local v255;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v255 = v80[2];
v78[v255] = v78[v255](v78[v255 + 1]);
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
elseif(v81 == 135) then local v1239 = 0;
local v1240;
while true do
    if(v1239 == 16) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v1239 = 17;
end
if(v1239 == 0) then v1240 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1240 = v80[2];
v78[v1240](v13(v78, v1240 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1239 = 1;
end
if(v1239 == 20) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v1239 = 21;
end
if(v1239 == 22) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
break;
end
if(v1239 == 12) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v1239 = 13;
end
if(v1239 == 2) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1239 = 3;
end
if(9 == v1239) then v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1239 = 10;
end
if(v1239 == 4) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1239 = 5;
end
if(v1239 == 13) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v1239 = 14;
end
if(v1239 == 18) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v1239 = 19;
end
if(v1239 == 11) then v80 = v68[v72];
v1240 = v80[2];
v78[v1240] = v78[v1240](v13(v78, v1240 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v1239 = 12;
end
if(v1239 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v1240 = v80[2];
v78[v1240] = v78[v1240]();
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v1239 = 2;
end
if(v1239 == 21) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
for v3281 = v80[2], v80[3] do v78[v3281] = nil;
    end v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1239 = 22;
end
if(v1239 == 7) then v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1239 = 8;
end
if(v1239 == 3) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1239 = 4;
end
if(6 == v1239) then v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1239 = 7;
end
if(v1239 == 10) then v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1239 = 11;
end
if(v1239 == 17) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v1239 = 18;
end
if(v1239 == 15) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v1239 = 16;
end
if(v1239 == 5) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1240 = v80[2];
v78[v1240] = v78[v1240](v13(v78, v1240 + 1, v80[3]));
v72 = v72 + 1;
v1239 = 6;
end
if(14 == v1239) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v1239 = 15;
end
if(8 == v1239) then v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1239 = 9;
end
if(v1239 == 19) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v1239 = 20;
end end
else v78[v80[2]] = #v78[v80[3]];
end elseif(v81 <= 138) then
if(v81 == 137) then local v1242 = 0;
local v1243;
local v1244;
while true do
    if(v1242 == 0) then v1243 = v80[2];
v1244 = v78[v1243];
v1242 = 1;
end
if(1 == v1242) then
for v3283 = v1243 + 1, v73 do v7(v1244, v78[v3283]);
    end
break;
end end
else local v1245;
local v1246;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1246 = v80[2];
v78[v1246](v13(v78, v1246 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1246 = v80[2];
v1245 = v78[v80[3]];
v78[v1246 + 1] = v1245;
v78[v1246] = v1245[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 == 139) then local v1257 = v80[2];
local v1258 = v78[v1257 + 2];
local v1259 = v78[v1257] + v1258;
v78[v1257] = v1259;
if(v1258 > 0) then
if(v1259 <= v78[v1257 + 1]) then v72 = v80[3];
v78[v1257 + 3] = v1259;
end elseif(v1259 >= v78[v1257 + 1]) then v72 = v80[3];
v78[v1257 + 3] = v1259;
end
else v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 154) then
if(v81 <= 147) then
if(v81 <= 143) then
if(v81 <= 141) then v78[v80[2]] = v78[v80[3]] % v78[v80[4]];
elseif(v81 == 142) then v78[v80[2]] = -v78[v80[3]];
else local v1267 = 0;
while true do
    if(v1267 == 3) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 4;
end
if(v1267 == 7) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 8;
end
if(9 == v1267) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1267 == 1) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 2;
end
if(v1267 == 6) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 7;
end
if(v1267 == 0) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 1;
end
if(8 == v1267) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 9;
end
if(v1267 == 4) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 5;
end
if(5 == v1267) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 6;
end
if(v1267 == 2) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1267 = 3;
end end end elseif(v81 <= 145) then
if(v81 == 144) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1274;
local v1275;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1275 = v80[2];
v78[v1275](v13(v78, v1275 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1275 = v80[2];
v1274 = v78[v80[3]];
v78[v1275 + 1] = v1274;
v78[v1275] = v1274[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 == 146) then local v1286;
local v1287;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1287 = v80[2];
v78[v1287](v13(v78, v1287 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1287 = v80[2];
v1286 = v78[v80[3]];
v78[v1287 + 1] = v1286;
v78[v1287] = v1286[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v1299 = 0;
while true do
    if(2 == v1299) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1299 = 3;
end
if(v1299 == 3) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1299 = 4;
end
if(v1299 == 1) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1299 = 2;
end
if(v1299 == 0) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1299 = 1;
end
if(v1299 == 4) then v78[v80[2]][v80[3]] = v80[4];
break;
end end end elseif(v81 <= 150) then
if(v81 <= 148) then v78[v80[2]] = v80[3] ~ = 0;
elseif(v81 == 149) then local v1300;
local v1301;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1301 = v80[2];
v78[v1301](v13(v78, v1301 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1301 = v80[2];
v1300 = v78[v80[3]];
v78[v1301 + 1] = v1300;
v78[v1301] = v1300[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1312;
local v1313;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1313 = v80[2];
v78[v1313](v13(v78, v1313 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1313 = v80[2];
v1312 = v78[v80[3]];
v78[v1313 + 1] = v1312;
v78[v1313] = v1312[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 152) then
if(v81 > 151) then local v1324;
local v1325;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1325 = v80[2];
v78[v1325](v13(v78, v1325 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1325 = v80[2];
v1324 = v78[v80[3]];
v78[v1325 + 1] = v1324;
v78[v1325] = v1324[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1336 = 0;
local v1337;
local v1338;
while true do
    if(v1336 == 0) then v1337 = nil;
v1338 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v1336 = 1;
end
if(v1336 == 4) then v78[v1338] = v1337[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1336 = 5;
end
if(v1336 == 3) then v1338 = v80[2];
v1337 = v78[v80[3]];
v78[v1338 + 1] = v1337;
v1336 = 4;
end
if(v1336 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v1338 = v80[2];
v1336 = 2;
end
if(v1336 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1336 = 7;
end
if(v1336 == 8) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1336 == 7) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1336 = 8;
end
if(v1336 == 5) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v1336 = 6;
end
if(v1336 == 2) then v78[v1338](v13(v78, v1338 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1336 = 3;
end end end elseif(v81 == 153) then local v1339;
local v1340;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1340 = v80[2];
v78[v1340](v13(v78, v1340 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1340 = v80[2];
v1339 = v78[v80[3]];
v78[v1340 + 1] = v1339;
v78[v1340] = v1339[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1351 = 0;
local v1352;
local v1353;
while true do
    if(v1351 == 7) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1351 = 8;
end
if(v1351 == 3) then v1353 = v80[2];
v1352 = v78[v80[3]];
v78[v1353 + 1] = v1352;
v1351 = 4;
end
if(v1351 == 0) then v1352 = nil;
v1353 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v1351 = 1;
end
if(v1351 == 2) then v78[v1353](v13(v78, v1353 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1351 = 3;
end
if(v1351 == 4) then v78[v1353] = v1352[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1351 = 5;
end
if(v1351 == 5) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v1351 = 6;
end
if(v1351 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v1353 = v80[2];
v1351 = 2;
end
if(v1351 == 6) then v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1351 = 7;
end
if(v1351 == 8) then v78[v80[2]][v80[3]] = v80[4];
break;
end end end elseif(v81 <= 161) then
if(v81 <= 157) then
if(v81 <= 155) then local v267 = 0;
local v268;
local v269;
while true do
    if(v267 == 1) then v269 = v80[2];
v78[v269] = v78[v269](v13(v78, v269 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v269 = v80[2];
v267 = 2;
end
if(v267 == 3) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v267 = 4;
end
if(v267 == 6) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
break;
end
if(4 == v267) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v267 = 5;
end
if(v267 == 2) then v268 = v78[v80[3]];
v78[v269 + 1] = v268;
v78[v269] = v268[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v267 = 3;
end
if(v267 == 0) then v268 = nil;
v269 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v267 = 1;
end
if(v267 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v267 = 6;
end end elseif(v81 > 156) then local v1354;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1354 = v80[2];
v78[v1354] = v78[v1354](v78[v1354 + 1]);
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
else local v1364 = 0;
local v1365;
local v1366;
while true do
    if(v1364 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1364 == 1) then v80 = v68[v72];
v1366 = v80[2];
v78[v1366](v13(v78, v1366 + 1, v80[3]));
v72 = v72 + 1;
v1364 = 2;
end
if(0 == v1364) then v1365 = nil;
v1366 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1364 = 1;
end
if(6 == v1364) then v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v1364 = 7;
end
if(v1364 == 2) then v80 = v68[v72];
v1366 = v80[2];
v1365 = v78[v80[3]];
v78[v1366 + 1] = v1365;
v1364 = 3;
end
if(v1364 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1364 = 6;
end
if(v1364 == 3) then v78[v1366] = v1365[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v1364 = 4;
end
if(v1364 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1364 = 5;
end end end elseif(v81 <= 159) then
if(v81 > 158) then local v1367;
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1367 = v80[2];
v78[v1367] = v78[v1367](v13(v78, v1367 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
end elseif(v81 == 160) then local v1377;
local v1378;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1378 = v80[2];
v78[v1378](v13(v78, v1378 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1378 = v80[2];
v1377 = v78[v80[3]];
v78[v1378 + 1] = v1377;
v78[v1378] = v1377[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1390;
local v1391;
v1391 = v80[2];
v78[v1391] = v78[v1391](v13(v78, v1391 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1391 = v80[2];
v1390 = v78[v80[3]];
v78[v1391 + 1] = v1390;
v78[v1391] = v1390[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1391 = v80[2];
v78[v1391] = v78[v1391](v13(v78, v1391 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1391 = v80[2];
v1390 = v78[v80[3]];
v78[v1391 + 1] = v1390;
v78[v1391] = v1390[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 164) then
if(v81 <= 162) then v72 = v80[3];
elseif(v81 > 163) then local v1403;
local v1404;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1404 = v80[2];
v78[v1404](v13(v78, v1404 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1404 = v80[2];
v1403 = v78[v80[3]];
v78[v1404 + 1] = v1403;
v78[v1404] = v1403[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
else local v1416;
local v1417;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1417 = v80[2];
v78[v1417](v13(v78, v1417 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1417 = v80[2];
v1416 = v78[v80[3]];
v78[v1417 + 1] = v1416;
v78[v1417] = v1416[v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 166) then
if(v81 > 165) then local v1429;
local v1430;
v1430 = v80[2];
v78[v1430] = v78[v1430](v13(v78, v1430 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1430 = v80[2];
v1429 = v78[v80[3]];
v78[v1430 + 1] = v1429;
v78[v1430] = v1429[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1430 = v80[2];
v78[v1430] = v78[v1430](v13(v78, v1430 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1430 = v80[2];
v1429 = v78[v80[3]];
v78[v1430 + 1] = v1429;
v78[v1430] = v1429[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1442;
local v1443;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1443 = v80[2];
v78[v1443](v13(v78, v1443 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1443 = v80[2];
v1442 = v78[v80[3]];
v78[v1443 + 1] = v1442;
v78[v1443] = v1442[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 == 167) then local v1454;
local v1455;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1455 = v80[2];
v78[v1455](v13(v78, v1455 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1455 = v80[2];
v1454 = v78[v80[3]];
v78[v1455 + 1] = v1454;
v78[v1455] = v1454[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1466;
local v1467;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1467 = v80[2];
v78[v1467](v13(v78, v1467 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1467 = v80[2];
v1466 = v78[v80[3]];
v78[v1467 + 1] = v1466;
v78[v1467] = v1466[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 196) then
if(v81 <= 182) then
if(v81 <= 175) then
if(v81 <= 171) then
if(v81 <= 169) then local v271;
local v272;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v272 = v80[2];
v78[v272] = v78[v272](v13(v78, v272 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v272 = v80[2];
v271 = v78[v80[3]];
v78[v272 + 1] = v271;
v78[v272] = v271[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
elseif(v81 > 170) then
if v78[v80[2]] then v72 = v72 + 1;
else v72 = v80[3];
end
else v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v72 = v80[3];
end elseif(v81 <= 173) then
if(v81 > 172) then v78[v80[2]][v80[3]] = v80[4];
else local v1485;
local v1486;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1486 = v80[2];
v78[v1486](v13(v78, v1486 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1486 = v80[2];
v1485 = v78[v80[3]];
v78[v1486 + 1] = v1485;
v78[v1486] = v1485[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 == 174) then v78[v80[2]] = v78[v80[3]] / v80[4];
else local v1498;
local v1499;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1499 = v80[2];
v78[v1499](v13(v78, v1499 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1499 = v80[2];
v1498 = v78[v80[3]];
v78[v1499 + 1] = v1498;
v78[v1499] = v1498[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 178) then
if(v81 <= 176) then local v285;
local v286;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v286 = v80[2];
v78[v286](v13(v78, v286 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v286 = v80[2];
v285 = v78[v80[3]];
v78[v286 + 1] = v285;
v78[v286] = v285[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 > 177) then local v1510;
local v1511;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1511 = v80[2];
v78[v1511](v13(v78, v1511 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1511 = v80[2];
v1510 = v78[v80[3]];
v78[v1511 + 1] = v1510;
v78[v1511] = v1510[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1522;
local v1523;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1523 = v80[2];
v78[v1523] = v78[v1523](v13(v78, v1523 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1523 = v80[2];
v1522 = v78[v80[3]];
v78[v1523 + 1] = v1522;
v78[v1523] = v1522[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 <= 180) then
if(v81 > 179) then local v1537 = 0;
local v1538;
local v1539;
local v1540;
while true do
    if(v1537 == 1) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 2;
end
if(v1537 == 5) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 6;
end
if(v1537 == 7) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 8;
end
if(v1537 == 6) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 7;
end
if(v1537 == 3) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 4;
end
if(v1537 == 4) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 5;
end
if(v1537 == 8) then v1540 = v80[2];
v1539 = v78[v1540];
v1538 = v80[3];
v1537 = 9;
end
if(v1537 == 0) then v1538 = nil;
v1539 = nil;
v1540 = nil;
v1537 = 1;
end
if(v1537 == 9) then
for v3288 = 1, v1538 do v1539[v3288] = v78[v1540 + v3288];
    end
break;
end
if(v1537 == 2) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1537 = 3;
end end
else v78[v80[2]][v78[v80[3]]] = v78[v80[4]];
end elseif(v81 == 181) then local v1543;
local v1544;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1544 = v80[2];
v1543 = v78[v80[3]];
v78[v1544 + 1] = v1543;
v78[v1544] = v1543[v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1544 = v80[2];
v78[v1544] = v78[v1544](v13(v78, v1544 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1544 = v80[2];
v1543 = v78[v80[3]];
v78[v1544 + 1] = v1543;
v78[v1544] = v1543[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1544 = v80[2];
v78[v1544](v13(v78, v1544 + 1, v80[3]));
else local v1556;
local v1557;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1557 = v80[2];
v78[v1557](v13(v78, v1557 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1557 = v80[2];
v1556 = v78[v80[3]];
v78[v1557 + 1] = v1556;
v78[v1557] = v1556[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
end elseif(v81 <= 189) then
if(v81 <= 185) then
if(v81 <= 183) then local v298;
local v299;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v299 = v80[2];
v78[v299](v13(v78, v299 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v299 = v80[2];
v298 = v78[v80[3]];
v78[v299 + 1] = v298;
v78[v299] = v298[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v299 = v80[2];
v78[v299] = v78[v299](v13(v78, v299 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v299 = v80[2];
v298 = v78[v80[3]];
v78[v299 + 1] = v298;
v78[v299] = v298[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
elseif(v81 == 184) then local v1568;
local v1569;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1569 = v80[2];
v78[v1569](v13(v78, v1569 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1569 = v80[2];
v1568 = v78[v80[3]];
v78[v1569 + 1] = v1568;
v78[v1569] = v1568[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else
    do return v78[v80[2]];
    end end elseif(v81 <= 187) then
if(v81 == 186) then v61[v80[3]] = v78[v80[2]];
else local v1583;
local v1584;
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]]();
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1584 = v80[2];
v1583 = v78[v80[3]];
v78[v1584 + 1] = v1583;
v78[v1584] = v1583[v78[v80[4]]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1584 = v80[2];
v78[v1584] = v78[v1584](v13(v78, v1584 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1584 = v80[2];
v1583 = v78[v80[3]];
v78[v1584 + 1] = v1583;
v78[v1584] = v1583[v80[4]];
end elseif(v81 == 188) then local v1596;
local v1597;
local v1598;
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1598 = v80[2];
v1597 = v78[v1598];
v1596 = v80[3];
for v2002 = 1, v1596 do v1597[v2002] = v78[v1598 + v2002];
    end
else v78[v80[2]] = {};
end elseif(v81 <= 192) then
if(v81 <= 190) then local v311;
local v312;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v312 = v80[2];
v78[v312](v13(v78, v312 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v312 = v80[2];
v311 = v78[v80[3]];
v78[v312 + 1] = v311;
v78[v312] = v311[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
elseif(v81 > 191) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = -v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] / v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
if v78[v80[2]] then v72 = v72 + 1;
else v72 = v80[3];
end
else local v1609 = 0;
local v1610;
while true do
    if(v1609 == 11) then v72 = v72 + 1;
v80 = v68[v72];
v1610 = v80[2];
v78[v1610] = v78[v1610](v13(v78, v1610 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v1609 = 12;
end
if(v1609 == 8) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] - v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1610 = v80[2];
v78[v1610] = v78[v1610](v13(v78, v1610 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v1609 = 9;
end
if(v1609 == 3) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v1609 = 4;
end
if(10 == v1609) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v80[4];
v1609 = 11;
end
if(9 == v1609) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1609 = 10;
end
if(v1609 == 12) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v80[4];
v72 = v72 + 1;
v1609 = 13;
end
if(v1609 == 6) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1609 = 7;
end
if(v1609 == 13) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
break;
end
if(v1609 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1609 = 8;
end
if(v1609 == 4) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1610 = v80[2];
v78[v1610] = v78[v1610](v13(v78, v1610 + 1, v80[3]));
v72 = v72 + 1;
v1609 = 5;
end
if(v1609 == 5) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1609 = 6;
end
if(v1609 == 0) then v1610 = nil;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1609 = 1;
end
if(v1609 == 2) then v72 = v72 + 1;
v80 = v68[v72];
v1610 = v80[2];
v78[v1610] = v78[v1610](v13(v78, v1610 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v1609 = 3;
end
if(v1609 == 1) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v1609 = 2;
end end end elseif(v81 <= 194) then
if(v81 > 193) then local v1611;
local v1612;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1612 = v80[2];
v78[v1612](v13(v78, v1612 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1612 = v80[2];
v1611 = v78[v80[3]];
v78[v1612 + 1] = v1611;
v78[v1612] = v1611[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1623 = 0;
local v1624;
local v1625;
while true do
    if(7 == v1623) then v78[v1625] = v78[v1625](v13(v78, v1625 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1623 = 8;
end
if(v1623 == 5) then v78[v1625 + 1] = v1624;
v78[v1625] = v1624[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1623 = 6;
end
if(v1623 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v1625 = v80[2];
v1624 = v78[v80[3]];
v1623 = 5;
end
if(v1623 == 0) then v1624 = nil;
v1625 = nil;
v1625 = v80[2];
v1624 = v78[v80[3]];
v1623 = 1;
end
if(v1623 == 3) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1623 = 4;
end
if(v1623 == 1) then v78[v1625 + 1] = v1624;
v78[v1625] = v1624[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1623 = 2;
end
if(v1623 == 6) then v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1625 = v80[2];
v1623 = 7;
end
if(9 == v1623) then v80 = v68[v72];
v78[v80[2]] = v80[3];
break;
end
if(v1623 == 8) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1623 = 9;
end
if(2 == v1623) then v1625 = v80[2];
v78[v1625] = v78[v1625](v78[v1625 + 1]);
v72 = v72 + 1;
v80 = v68[v72];
v1623 = 3;
end end end elseif(v81 == 195) then local v1626;
local v1627;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1627 = v80[2];
v78[v1627](v13(v78, v1627 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1627 = v80[2];
v1626 = v78[v80[3]];
v78[v1627 + 1] = v1626;
v78[v1627] = v1626[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1638 = 0;
local v1639;
local v1640;
while true do
    if(v1638 == 0) then v1639 = nil;
v1640 = nil;
v78[v80[2]] = v78[v80[3]];
v1638 = 1;
end
if(v1638 == 1) then v72 = v72 + 1;
v80 = v68[v72];
v1640 = v80[2];
v1638 = 2;
end
if(v1638 == 5) then v1639 = v78[v80[4]];
if not v1639 then v72 = v72 + 1;
else v78[v80[2]] = v1639;
v72 = v80[3];
end
break;
end
if(v1638 == 3) then v78[v80[2]] = v78[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1638 = 4;
end
if(v1638 == 4) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1638 = 5;
end
if(v1638 == 2) then v78[v1640] = v78[v1640](v78[v1640 + 1]);
v72 = v72 + 1;
v80 = v68[v72];
v1638 = 3;
end end end elseif(v81 <= 210) then
if(v81 <= 203) then
if(v81 <= 199) then
if(v81 <= 197) then local v323;
local v324;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v324 = v80[2];
v78[v324](v13(v78, v324 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v324 = v80[2];
v323 = v78[v80[3]];
v78[v324 + 1] = v323;
v78[v324] = v323[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
elseif(v81 > 198) then local v1641 = v80[2];
v78[v1641] = v78[v1641](v13(v78, v1641 + 1, v80[3]));
else local v1643 = 0;
local v1644;
local v1645;
while true do
    if(v1643 == 0) then v1644 = nil;
v1645 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1643 = 1;
end
if(v1643 == 3) then v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1643 = 4;
end
if(v1643 == 6) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1643 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1643 = 6;
end
if(1 == v1643) then v1645 = v80[2];
v78[v1645](v13(v78, v1645 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1645 = v80[2];
v1643 = 2;
end
if(v1643 == 2) then v1644 = v78[v80[3]];
v78[v1645 + 1] = v1644;
v78[v1645] = v1644[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1643 = 3;
end
if(4 == v1643) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v1643 = 5;
end end end elseif(v81 <= 201) then
if(v81 > 200) then local v1646;
local v1647;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1647 = v80[2];
v78[v1647](v13(v78, v1647 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1647 = v80[2];
v1646 = v78[v80[3]];
v78[v1647 + 1] = v1646;
v78[v1647] = v1646[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
end elseif(v81 == 202) then local v1659;
local v1660;
v1660 = v80[2];
v78[v1660](v13(v78, v1660 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1660 = v80[2];
v1659 = v78[v80[3]];
v78[v1660 + 1] = v1659;
v78[v1660] = v1659[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else v78[v80[2]] = v78[v80[3]] * v80[4];
end elseif(v81 <= 206) then
if(v81 <= 204) then local v336 = 0;
local v337;
local v338;
while true do
    if(v336 == 1) then v80 = v68[v72];
v338 = v80[2];
v78[v338](v13(v78, v338 + 1, v80[3]));
v72 = v72 + 1;
v336 = 2;
end
if(6 == v336) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(0 == v336) then v337 = nil;
v338 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v336 = 1;
end
if(v336 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v336 = 5;
end
if(v336 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v336 = 6;
end
if(2 == v336) then v80 = v68[v72];
v338 = v80[2];
v337 = v78[v80[3]];
v78[v338 + 1] = v337;
v336 = 3;
end
if(3 == v336) then v78[v338] = v337[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v336 = 4;
end end elseif(v81 == 205) then local v1673;
local v1674;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1674 = v80[2];
v78[v1674](v13(v78, v1674 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1674 = v80[2];
v1673 = v78[v80[3]];
v78[v1674 + 1] = v1673;
v78[v1674] = v1673[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1674 = v80[2];
v78[v1674](v13(v78, v1674 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1674 = v80[2];
v1673 = v78[v80[3]];
v78[v1674 + 1] = v1673;
v78[v1674] = v1673[v80[4]];
else v78[v80[2]] = v60[v80[3]];
end elseif(v81 <= 208) then
if(v81 == 207) then local v1687 = 0;
local v1688;
while true do
    if(v1687 == 3) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] - v78[v80[4]];
v1687 = 4;
end
if(v1687 == 6) then v72 = v72 + 1;
v80 = v68[v72];
if(v78[v80[2]] < v78[v80[4]]) then v72 = v72 + 1;
else v72 = v80[3];
end
break;
end
if(v1687 == 0) then v1688 = nil;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v1687 = 1;
end
if(v1687 == 5) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v1687 = 6;
end
if(v1687 == 2) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v60[v80[3]];
v1687 = 3;
end
if(v1687 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1687 = 5;
end
if(v1687 == 1) then v80 = v68[v72];
v1688 = v80[2];
v78[v1688] = v78[v1688]();
v1687 = 2;
end end
else local v1689 = v80[2];
local v1690, v1691 = v71(v78[v1689](v78[v1689 + 1]));
v73 = (v1691 + v1689) - 1;
local v1692 = 0;
for v2025 = v1689, v73 do local v2026 = 0; while true do
        if(v2026 == 0) then v1692 = v1692 + 1;v78[v2025] = v1690[v1692];
    break;end end end end elseif(v81 > 209) then local v1693 = 0;local v1694;local v1695;
    while true do
        if(v1693 == 6) then v78[v80[2]] = v80[3];v72 = v72 + 1;v80 = v68[v72];v78[v80[2]][v80[3]] = v78[v80[4]];v1693 = 7;end
    if(v1693 == 0) then v1694 = nil;
v1695 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1693 = 1;
end
if(v1693 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1693 = 6;
end
if(v1693 == 8) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
break;
end
if(v1693 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1693 = 8;
end
if(v1693 == 1) then v80 = v68[v72];
v1695 = v80[2];
v78[v1695](v13(v78, v1695 + 1, v80[3]));
v72 = v72 + 1;
v1693 = 2;
end
if(3 == v1693) then v78[v1695] = v1694[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v1693 = 4;
end
if(v1693 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v1693 = 5;
end
if(v1693 == 2) then v80 = v68[v72];
v1695 = v80[2];
v1694 = v78[v80[3]];
v78[v1695 + 1] = v1694;
v1693 = 3;
end end
else local v1696 = 0;
local v1697;
local v1698;
while true do
    if(v1696 == 1) then v80 = v68[v72];
v1698 = v80[2];
v78[v1698](v13(v78, v1698 + 1, v80[3]));
v72 = v72 + 1;
v1696 = 2;
end
if(v1696 == 3) then v78[v1698] = v1697[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v1696 = 4;
end
if(v1696 == 2) then v80 = v68[v72];
v1698 = v80[2];
v1697 = v78[v80[3]];
v78[v1698 + 1] = v1697;
v1696 = 3;
end
if(4 == v1696) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v1696 = 5;
end
if(6 == v1696) then v78[v80[2]][v80[3]] = v80[4];
break;
end
if(v1696 == 0) then v1697 = nil;
v1698 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1696 = 1;
end
if(v1696 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1696 = 6;
end end end elseif(v81 <= 217) then
if(v81 <= 213) then
if(v81 <= 211) then v78[v80[2]] = v80[3];
elseif(v81 > 212) then local v1699;
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1699 = v80[2];
v78[v1699] = v78[v1699](v13(v78, v1699 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
else local v1708;
v78[v80[2]] = v78[v80[3]] + v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1708 = v80[2];
v78[v1708] = v78[v1708](v13(v78, v1708 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v72 = v80[3];
end elseif(v81 <= 215) then
if(v81 == 214) then local v1716;
local v1717;
local v1718;
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v1718 = v80[2];
v1717 = v78[v1718];
v1716 = v80[3];
for v2027 = 1, v1716 do v1717[v2027] = v78[v1718 + v2027];
    end
else
    do return;
    end end elseif(v81 > 216) then local v1724;
local v1725;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1725 = v80[2];
v78[v1725](v13(v78, v1725 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1725 = v80[2];
v1724 = v78[v80[3]];
v78[v1725 + 1] = v1724;
v78[v1725] = v1724[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
else local v1736;
local v1737;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1737 = v80[2];
v78[v1737](v13(v78, v1737 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1737 = v80[2];
v1736 = v78[v80[3]];
v78[v1737 + 1] = v1736;
v78[v1737] = v1736[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3] ~ = 0;
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
end elseif(v81 <= 221) then
if(v81 <= 219) then
if(v81 == 218) then local v1749 = 0;
local v1750;
local v1751;
while true do
    if(v1749 == 2) then v80 = v68[v72];
v1751 = v80[2];
v1750 = v78[v80[3]];
v78[v1751 + 1] = v1750;
v1749 = 3;
end
if(v1749 == 5) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1749 = 6;
end
if(v1749 == 4) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v1749 = 5;
end
if(v1749 == 6) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v1749 = 7;
end
if(v1749 == 1) then v80 = v68[v72];
v1751 = v80[2];
v78[v1751] = v78[v1751](v13(v78, v1751 + 1, v80[3]));
v72 = v72 + 1;
v1749 = 2;
end
if(v1749 == 0) then v1750 = nil;
v1751 = nil;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v1749 = 1;
end
if(v1749 == 8) then v80 = v68[v72];
v78[v80[2]][v80[3]] = v78[v80[4]];
break;
end
if(v1749 == 3) then v78[v1751] = v1750[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v1749 = 4;
end
if(v1749 == 7) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1749 = 8;
end end
else v60[v80[3]] = v78[v80[2]];
end elseif(v81 > 220) then
if(v78[v80[2]] == v78[v80[4]]) then v72 = v72 + 1;
else v72 = v80[3];
end
else local v1754 = v80[2];
local v1755 = v80[4];
local v1756 = v1754 + 2;
local v1757 = {
    v78[v1754](v78[v1754 + 1], v78[v1756])
};
for v2030 = 1, v1755 do v78[v1756 + v2030] = v1757[v2030];
    end local v1758 = v1757[1];
if v1758 then local v2052 = 0;
while true do
    if(0 == v2052) then v78[v1756] = v1758;
v72 = v80[3];
break;
end end
else v72 = v72 + 1;
end end elseif(v81 <= 223) then
if(v81 == 222) then local v1759 = 0;
local v1760;
while true do
    if(v1759 == 0) then v1760 = v80[2];
v78[v1760] = v78[v1760](v78[v1760 + 1]);
break;
end end
else local v1761;
local v1762;
v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1762 = v80[2];
v78[v1762] = v78[v1762](v13(v78, v1762 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v1762 = v80[2];
v1761 = v78[v80[3]];
v78[v1762 + 1] = v1761;
v78[v1762] = v1761[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = {};
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]][v80[3]] = v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v80[3];
end elseif(v81 == 224) then local v1776 = 0;
local v1777;
local v1778;
while true do
    if(v1776 == 3) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v1776 = 4;
end
if(1 == v1776) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1776 = 2;
end
if(12 == v1776) then v78[v1778] = v78[v1778](v13(v78, v1778 + 1, v80[3]));
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] * v80[4];
v1776 = 13;
end
if(v1776 == 0) then v1777 = nil;
v1778 = nil;
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v1776 = 1;
end
if(v1776 == 13) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] + v78[v80[4]];
v72 = v72 + 1;
v1776 = 14;
end
if(v1776 == 14) then v80 = v68[v72];
v72 = v80[3];
break;
end
if(v1776 == 2) then v78[v80[2]] = v78[v80[3]] * v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v1776 = 3;
end
if(v1776 == 4) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] % v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1776 = 5;
end
if(v1776 == 5) then v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1778 = v80[2];
v1776 = 6;
end
if(v1776 == 11) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1778 = v80[2];
v1776 = 12;
end
if(v1776 == 10) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1776 = 11;
end
if(v1776 == 7) then v80 = v68[v72];
v78[v80[2]] = v78[v80[3]] / v80[4];
v72 = v72 + 1;
v80 = v68[v72];
v1776 = 8;
end
if(v1776 == 8) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v78[v80[3]][v80[4]];
v1776 = 9;
end
if(6 == v1776) then v1777 = v78[v80[3]];
v78[v1778 + 1] = v1777;
v78[v1778] = v1777[v80[4]];
v72 = v72 + 1;
v1776 = 7;
end
if(9 == v1776) then v72 = v72 + 1;
v80 = v68[v72];
v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v1776 = 10;
end end
else local v1779 = 0;
while true do
    if(v1779 == 5) then v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 6;
end
if(2 == v1779) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 3;
end
if(0 == v1779) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 1;
end
if(v1779 == 3) then v78[v80[2]] = v61[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 4;
end
if(v1779 == 4) then v78[v80[2]] = v78[v80[3]][v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 5;
end
if(v1779 == 7) then v78[v80[2]] = v80[3];
break;
end
if(v1779 == 6) then v78[v80[2]][v80[3]] = v78[v80[4]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 7;
end
if(v1779 == 1) then v78[v80[2]] = v60[v80[3]];
v72 = v72 + 1;
v80 = v68[v72];
v1779 = 2;
end end end v72 = v72 + 1;
break;
end
if(v90 == 0) then v80 = v68[v72];
v81 = v80[1];
v90 = 1;
end end end end;
end
return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
